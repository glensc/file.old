Portability of the new file(1) command:

Read this file only if the program doesn't compile on your system.

I had hoped to be able to make a file command that
didn't have any system-dependant #ifdefs, no special libraries,
etc., etc. I went to some lengths to include all the non-portable
library routines I used (getopt, str*).  Well, System V shot me down.
They moved the definition of major() and minor() out of <sys/types.h>
into <sys/sysmacros.h>.  So, if major isn't defined after including types.h,
I AUTOMATICALLY include sys/sysmacros.h. ONLY if you have a system in which 
neither types.h nor sysmacros.h defines `major' will this automatic include
fail (I hope). On such systems, you will get a compilation
error in trying to compile a warning message. Please do the following:
	1) change the appropriate (2nd) #include at the start of 
		fsmagic.c
and	2) let me know the name of the system, the release number,
	   and the name of the header file that *does* include
	   this "standard" definition.

If you are running the old Ritchie PDP-11 C compiler or
some other compiler that doesn't know about `void', you will have
to un-comment-out the definition of `void=int' in the Makefile.

Other than this, there should be no portability problems,
but one never knows these days. Please let me know of any
other problems you find porting to a UNIX system. I don't much
care for non-UNIX systems but will collect widely-used magic 
numbers for them as well as for UNIX systems.

Ian Darwin
Toronto, Canada
